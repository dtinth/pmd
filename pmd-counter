#!/usr/bin/env macruby
framework 'Cocoa'
require 'date'
require 'socket'

$pomodoro_text = 'N/A'

$server_thread = Thread.new do
  File.unlink '/tmp/pomodoro.sock'
  UNIXServer.open '/tmp/pomodoro.sock' do |server|
    while client = server.accept
      client.puts "#{$pomodoro_text}"
      client.close
    end
  end
end

class MyAppDelegate

  def applicationDidFinishLaunching(notification)

    menu = NSMenu.new
    item = menu.addItemWithTitle("Void", action: :"void:", keyEquivalent:"")
    statusBar = NSStatusBar.systemStatusBar

    # thanks tunnelblick!! (from MenuController.m)
    @item = item = statusBar._statusItemWithLength(0, withPriority:2147483646)
    statusBar.removeStatusItem(item)
    statusBar._insertStatusItem(item, withPriority:2147483646)
    item.length = 0
    item.menu = menu
    item.highlightMode = true
    item.length = NSVariableStatusItemLength
    time = 25 * 60
    if ARGV.length == 1
      time = ARGV[0].to_i * 60
    elsif ARGV.length == 2
      time = ARGV[0].to_i * 60 + ARGV[1].to_i
    end

    @finish = DateTime.now + Rational(time, 86400)
    NSTimer.scheduledTimerWithTimeInterval(1.0, target:self, selector: :"updateTime:", userInfo:nil, repeats:true)
    update
    
  end

  def void(sender)
    $server_thread.exit
    exit(false)
  end

  def updateTime(sender)
    update
  end

  def update
    left = (@finish - DateTime.now).*(86400).to_i
    @item.title = $pomodoro_text = "%d:%02d" % [ left / 60, left % 60 ]
    if left < 0
      $server_thread.exit
      exit(true)
    end
  end

end

app = NSApplication.sharedApplication
app.delegate = MyAppDelegate.new
app.run
